/*
Copyright 2020 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package cryptolib

type (
	// KeyMode stores the type of the Attestation.
	KeyMode int
	// SigningAlgorithm stores the public-key signing algorithm and hashing
	// function used to sign the Attestation.
	SigningAlgorithm int
)

// Enumeration of KeyMode
const (
	UnknownKeyMode KeyMode = iota
	Pgp
	Pkix
	Jwt
)

// Enumeration of SigningAlgorithm
const (
	UnknownSigningAlgorithm SigningAlgorithm = iota
	// RSASSA-PSS 2048 bit key with a SHA256 digest.
	RsaPss2048Sha256
	// RSASSA-PSS 3072 bit key with a SHA256 digest.
	RsaPss3072Sha256
	// RSASSA-PSS 4096 bit key with a SHA256 digest.
	RsaPss4096Sha256
	// RSASSA-PSS 4096 bit key with a SHA512 digest.
	RsaPss4096Sha512

	// RSASSA-PKCS1-v1_5 with a 2048 bit key and a SHA256 digest.
	RsaSignPkcs12048Sha256
	// RSASSA-PKCS1-v1_5 with a 3072 bit key and a SHA256 digest.
	RsaSignPkcs13072Sha256
	// RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA256 digest.
	RsaSignPkcs14096Sha256
	// RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA512 digest.
	RsaSignPkcs14096Sha512

	// ECDSA on the NIST P-256 curve with a SHA256 digest.
	EcdsaP256Sha256
	// ECDSA on the NIST P-384 curve with a SHA384 digest.
	EcdsaP384Sha384
	// ECDSA on the NIST P-521 curve with a SHA512 digest.
	EcdsaP521Sha512
)

// Attestation is a generic wrapper for an attestation. It can store signatures
// generated by PGP or PKIX keys. Alternatively, it can store an attestation
// represented as a JWT.
type Attestation struct {
	// KeyMode is the type of the Attestation: one of Pgp, Pkix, or Jwt.
	KeyMode KeyMode
	// SigningAlgorithm is the public-key signing algorithm and hashing
	// function used to sign the Attestation.
	SigningAlgorithm SigningAlgorithm
	// PublicKeyID is the ID of the public key that can verify the Attestation.
	PublicKeyID string
	// Signature stores the signature content for the Attestation.
	Signature Signature
	// SerializedPayload stores the payload over which the signature was
	// signed. This field is only used for Pkix Attestations. For Pgp and Jwt
	// Attestations, the payload is bundled with the signature itself.
	SerializedPayload []byte
}

// Signature holds the signature content of the Attestation.
type Signature struct {
	// LegacySignature stores the signature for Pgp and Pkix Attestations.
	LegacySignature []byte
	// JwtSignature stores the signature for Jwt Attestations.
	JwtSignature string
}
