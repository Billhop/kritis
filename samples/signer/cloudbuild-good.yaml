# Cloudbuild pipeline for a build with an image
# that passes the vuln policy
steps:
  # Build a 'good' image
  - name: gcr.io/cloud-builders/docker
    entrypoint: /bin/bash
    args:
      - -c
      - |
        docker build -t gcr.io/projectgut-215417/binauthz-test:latest -f ./Dockerfile.good .
    id: build
  - name: gcr.io/cloud-builders/docker
    entrypoint: /bin/bash
    args:
    - -c
    - |
      docker push gcr.io/projectgut-215417/binauthz-test:latest &&
      docker image inspect gcr.io/projectgut-215417/binauthz-test:latest --format '{{ .ID }}' > image-digest.txt &&
      cat image-digest.txt
    id: push
  # Wait for vulnerability scanning reaults
  - name: gcr.io/projectgut-215417/python-builder
    args:
    - ./wait-for-analysis.py
    - gcr.io/projectgut-215417/binauthz-test
    - projectgut-215417
    id: vulnpoll
  - name: gcr.io/projectgut-215417/kritis-signer
    args:
    - '-v=10'
    - '-alsologtostderr'
    - '-image=gcr.io/projectgut-215417/binauthz-test@$(cat image-digest.txt)'
    - '-credentials=kritis-service-account.json'
    - '-private_key=gpg.priv'
    - '-public_key=gpg.pub'
    - '-policy=policy.yaml'
    waitFor: vulnpoll
    id: vulnsign
images: ['gcr.io/projectgut-215417/binauthz-test:latest']
